<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>图片测试</title>
    <url>/p/b211d196.html</url>
    <content><![CDATA[<h1 id="图片测试环节"><a href="#图片测试环节" class="headerlink" title="图片测试环节"></a>图片测试环节</h1><p><img src="/p/b211d196/testpic1.jpg" alt="b211d196" title="autumn"></p>]]></content>
      <categories>
        <category>初期测试存档</category>
      </categories>
  </entry>
  <entry>
    <title>COMP9021学习笔记</title>
    <url>/p/9f40aa63.html</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>2023T2，马丁教的。个人感觉这门课很水（倒也是好事（学费：？））。就是很基础的python，应该是为了方便转码的同学设置的。上课体验不是很好，教案也没有，上课纯马丁炫技。马丁也有法式口音，在家看Lecture Record会有更好的体验（自动字幕太猛了）。但是。马丁真的很负责，很晚也会回邮件回论坛的问题。所以我给他好评。</p>
<span id="more"></span>

<h1 id="本地python环境安装"><a href="#本地python环境安装" class="headerlink" title="本地python环境安装"></a>本地python环境安装</h1><p>我用的Windows，Mac用户教不了（我没钱买）。个人建议无脑Anaconda。</p>
<ol>
<li><p><strong><a href="https://www.anaconda.com/download">点这里下载Anaconda</a></strong><br>（安装过程要非常的久，有几步卡个十几分钟是正常的）</p>
</li>
<li><p>安装完成后，在开始菜单找到Anaconda文件夹</p>
</li>
<li><p>单击Anaconda Navigator</p>
</li>
<li><p>在一阵弹窗过后选择JupiterLab，熟悉的窗口会自己弹出来了</p>
</li>
<li><p>没弹出来就自己在浏览器中输入 <a href="http://localhost:8888/lab">http://localhost:8888/lab</a><br>默认存储路径为<code>C:\Users\$用户名\</code></p>
</li>
</ol>
<p>.ipynb文件是马丁老师同款的python笔记本（我用来打草稿，Shift + Enter运行，也可以打断点调试，很好用)<br>.py是平时交作业用的格式，可以复制到Ed论坛试运行<br><mark>平时作业注意冒号后的空格（</mark></p>
<h1 id="期末抱佛脚复习部分"><a href="#期末抱佛脚复习部分" class="headerlink" title="期末抱佛脚复习部分"></a>期末抱佛脚复习部分</h1><p>我个人容易忘记的几句语法</p>
<ol>
<li>单个文件读取<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;文件名.txt&#x27;</span>) <span class="keyword">as</span> file:    <span class="comment">#默认当前路径</span></span><br><span class="line">    <span class="keyword">for</span> lines <span class="keyword">in</span> file:  <span class="comment">#不跳过空行</span></span><br><span class="line">        <span class="comment">#doing sth with lines</span></span><br></pre></td></tr></table></figure>
或者可以这样读取<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;文件名.txt&#x27;</span>) <span class="keyword">as</span> file:    <span class="comment">#默认当前路径</span></span><br><span class="line">    lines = file.read().split()  <span class="comment">#跳过空行，并且lines直接以列表存储</span></span><br></pre></td></tr></table></figure>
如果文件是.csv的话<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;文件名.csv&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    reader = csv.reader(file)</span><br><span class="line">    <span class="comment">#输入下列语句可以查看前十行是个啥，顺带知道这个csv每列的标题是什么</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">list</span>(reader)[:<span class="number">10</span>])</span><br><span class="line">    <span class="comment">#没有标题也可以自定义</span></span><br><span class="line">    <span class="keyword">for</span> title1, title2, title3... <span class="keyword">in</span> reader:</span><br><span class="line">        <span class="comment">#doing sth with reader</span></span><br></pre></td></tr></table></figure></li>
<li>单个文件写入<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#首先要定义file_name和string是什么，可以直接用&#x27;字符串&#x27;的形式表示</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(file_name, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> file:  <span class="comment">#表示开启写入模式</span></span><br><span class="line">    file.write(string)    </span><br></pre></td></tr></table></figure></li>
<li>多个文件读取<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">names_dir = Path(<span class="string">&#x27;文件夹名称&#x27;</span>)  <span class="comment">#这一步获取了文件夹的路径（考试一般也不会有重名的情况吧</span></span><br><span class="line"><span class="keyword">for</span> file_name <span class="keyword">in</span> <span class="built_in">sorted</span>(names_dir.glob(<span class="string">&#x27;*.txt&#x27;</span>)):   <span class="comment">#直接加一个sorted排好，自己看也方便</span></span><br><span class="line">    <span class="comment">#glob(&#x27;*.txt&#x27;)将文件夹中所有的文件名生成一个列表，也可以加别的限制条件</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file_name) <span class="keyword">as</span> file:</span><br><span class="line">        <span class="comment">#剩下的就和上面的一样了</span></span><br></pre></td></tr></table></figure></li>
<li>浮点数<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">float</span>(<span class="string">&#x27;-inf&#x27;</span>)   <span class="comment">#可以表示无穷小，在最值问题可能会用到</span></span><br><span class="line">    <span class="comment">#（最值问题答案不一定只有1个，新建list输出）</span></span><br><span class="line"><span class="built_in">round</span>(<span class="built_in">float</span>(f), n)  <span class="comment">#f为浮点数，n为显示小数位数</span></span><br></pre></td></tr></table></figure></li>
<li>class, def, self<br>这块知识在学期末尾教，要赶很多作业所以学的不是很好<br>（据说马丁教是不会考这类知识的，只能赌一手他不考<br>这里直接复制别人的笔记，，<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#类名要大写</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Circle</span>:</span><br><span class="line">    <span class="comment">#初始化</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, r, pi = <span class="number">3.14</span></span>):</span><br><span class="line">        <span class="comment">#类的属性</span></span><br><span class="line">        <span class="comment"># 一般带了self就不用return了，可以在其他函数直接调用</span></span><br><span class="line">        self.r = r</span><br><span class="line">        self.pi = pi</span><br><span class="line">        self.area = <span class="number">0.0</span></span><br><span class="line">        self.perimeter = <span class="number">0.0</span></span><br><span class="line">        <span class="comment">#计算面积（类的成员方法）</span></span><br><span class="line">        self.compute_area()</span><br><span class="line">        <span class="comment"># 计算周长（类的成员方法）</span></span><br><span class="line">        self.compute_perimeter()</span><br><span class="line">        </span><br><span class="line">    <span class="comment"># 计算面积（调用方法）</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">compute_area</span>(<span class="params">self</span>):</span><br><span class="line">        self.area = self.pi * self.r ** <span class="number">2</span></span><br><span class="line">        </span><br><span class="line">    <span class="comment">#计算周长</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">compute_perimeter</span>(<span class="params">self</span>):</span><br><span class="line">        self.perimeter = <span class="number">2</span> * self.pi * self.r</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 判断相等</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__eq__</span>(<span class="params">self, other</span>):</span><br><span class="line">        <span class="keyword">if</span> self.r == other.r:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        </span><br><span class="line">    <span class="comment"># 计算长度</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__len__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span> * self * r</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#字符串格式化</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;Circle str r: <span class="subst">&#123;self.r&#125;</span>&quot;</span></span><br><span class="line">    <span class="comment">#represent</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__repr__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;Circle repr r: <span class="subst">&#123;self.r&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure>
类的使用<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 初始化</span></span><br><span class="line">circle1 = Circle(<span class="number">2</span>)</span><br><span class="line"><span class="comment"># 调用实例的属性</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;面积是：&#x27;</span>, circle.area, <span class="string">&#x27;周长&#x27;</span>, circle1.perimeter)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化</span></span><br><span class="line">circle1 = Circle(<span class="number">100</span>)</span><br><span class="line"><span class="comment"># 调用</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;面积是：&#x27;</span>, circle.area, <span class="string">&#x27;周长&#x27;</span>, circle2.perimeter)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化</span></span><br><span class="line">circle2 = Circle(<span class="number">2101</span>, <span class="number">3.1415926</span>)</span><br><span class="line"><span class="comment"># 调用</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;面积是：&#x27;</span>, circle2.area, <span class="string">&#x27;周长&#x27;</span>, circle2.perimeter)</span><br><span class="line"></span><br><span class="line"><span class="comment">#运算符重载，调用的__eq__()</span></span><br><span class="line">circle1 == circle2</span><br></pre></td></tr></table></figure></li>
<li>字符串运算<br>删除(替换)元素<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">string.replace(<span class="string">&#x27;字符串&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>学习笔记区</category>
      </categories>
  </entry>
  <entry>
    <title>测试文字计数功能</title>
    <url>/p/c0e26dd6.html</url>
    <content><![CDATA[<h1 id="测试文字计数功能"><a href="#测试文字计数功能" class="headerlink" title="测试文字计数功能"></a>测试文字计数功能</h1><p>正文部分<br>随便写点东西</p>
<h2 id="code"><a href="#code" class="headerlink" title="code"></a>code</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">test</span></span><br><span class="line"><span class="built_in">test</span> 中文</span><br></pre></td></tr></table></figure>
<p><strong>加粗test</strong></p>
<p><del>横线test</del></p>
<p><em>斜体test</em></p>
<ul>
<li>list</li>
<li>list</li>
</ul>
<ol>
<li>Sorted list</li>
<li>Sorted list</li>
<li>Sorted list</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">code here</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new post First_Test</span><br><span class="line">INFO  Validating config</span><br><span class="line">INFO  Created: D:\&lt;user name&gt;\<span class="built_in">source</span>\_posts\2023-06-25-First-Test.md</span><br></pre></td></tr></table></figure>



<h1 id="标题一"><a href="#标题一" class="headerlink" title="标题一"></a>标题一</h1><h2 id="标题二"><a href="#标题二" class="headerlink" title="标题二"></a>标题二</h2><h3 id="标题三"><a href="#标题三" class="headerlink" title="标题三"></a>标题三</h3><h4 id="标题四"><a href="#标题四" class="headerlink" title="标题四"></a>标题四</h4><h5 id="标题五"><a href="#标题五" class="headerlink" title="标题五"></a>标题五</h5>]]></content>
      <categories>
        <category>初期测试存档</category>
      </categories>
  </entry>
</search>
